!function(e,o){"use strict";function t(e){e.widget("map",{title:"map",description:"Display the current temperature of a city",templateUrl:"{widgetsPath}/map/src/view.html",controller:"mapController",controllerAs:"vm",reload:!0,resolve:{data:["mapService","config",function(e,o){if(o.location)return e.get(o.location)}]},edit:{templateUrl:"{widgetsPath}/map/src/edit.html"}})}function r(e,o,t,r,l){function n(e){e>100&&(e=100);var o=Math.floor(255*e/100),t=Math.floor(255*(100-e)/100),r=0;return"rgb("+o+","+t+","+r+")"}function a(o){var t=e.defer(),r=o;console.log("Location of the marker service : "+r);for(var l=2e4,a=80,c=new Array(l),i=0;i<l;++i){var s=[101+10*Math.random(),10*Math.random()-2];c[i]=new ol.Feature(new ol.geom.Point(ol.proj.transform(s,"EPSG:4326","EPSG:3857")))}var m=new ol.source.Vector({features:c}),d=new ol.source.Cluster({distance:a,source:m}),u={},p=new ol.layer.Vector({source:d,style:function(e){var o=e.get("features").length,t=u[o];return t||(o>1?(t=new ol.style.Style({image:new ol.style.Circle({radius:Math.min(50,Math.max(15,o/10)),stroke:new ol.style.Stroke({color:"#fff"}),fill:new ol.style.Fill({color:n(o)})}),text:new ol.style.Text({text:o.toString(),fill:new ol.style.Fill({color:"#fff"}),stroke:new ol.style.Stroke({color:"rgba(0, 0, 0, 0.6)",width:3})})}),u[o]=t):(t=new ol.style.Style({image:new ol.style.Icon({anchor:[.5,46],anchorXUnits:"fraction",anchorYUnits:"pixels",src:"https://openlayers.org/en/v3.20.1/examples/data/icon.png"})}),u[o]=t)),t}});return t.resolve(p),t.reject("map service returned invalid body"),t.promise}return console.log("Service called with arguments "+r+" "+l),{get:a}}function l(e,o,t){e.clusters=o,console.log(o),e.center=[0,0],e.centerCoord=ol.proj.transform(e.center,"EPSG:4326","EPSG:3857"),null!=t.center&&(e.center=[t.center.lon,t.center.lat],e.centerCoord=ol.proj.transform(e.center,"EPSG:4326","EPSG:3857"));null==t.zoom,e.map=new ol.Map({controls:ol.control.defaults().extend([new ol.control.FullScreen]),layers:[new ol.layer.Tile({source:new ol.source.OSM})],target:"map",view:new ol.View({center:[0,0],zoom:2})}),e.map.getView().setCenter(e.centerCoord),e.map.getView().setZoom(t.zoom),null!=e.clusters&&(console.log("Add layer."),console.log("$scope.clusters.visible : "+e.clusters.getVisible()),e.map.addLayer(e.clusters))}t.$inject=["dashboardProvider"],r.$inject=["$q","$http","$sce","argument1","argument2"],l.$inject=["$scope","data","config"],angular.module("adf.widget.map",["adf.provider"]).value("argument1","value arg1").value("argument2","value arg2").config(t),angular.module("adf.widget.map").run(["$templateCache",function(e){e.put("{widgetsPath}/map/src/edit.html",'<form role=form><div class=form-group><label for=location>Location</label> <input type=location class=form-control id=location ng-model=config.location placeholder="Enter location"> <label for=center>Center</label> <input type=number class=form-control id=center ng-model=config.center.lat placeholder=Latitude> <input type=number class=form-control id=center ng-model=config.center.lon placeholder=Longitude> <label for=zoom>Zoom</label> <input type=number class=form-control id=zoom ng-model=config.zoom placeholder=Zoom></div></form>'),e.put("{widgetsPath}/map/src/view.html","<div id=map class=map></div>")}]),angular.module("adf.widget.map").service("mapService",r),angular.module("adf.widget.map").controller("mapController",l)}(window);